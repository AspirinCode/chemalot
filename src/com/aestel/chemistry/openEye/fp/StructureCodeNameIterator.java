/*
   Copyright 2006-2014 Man-Ling Lee & Alberto Gobbi

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

Contact: aestelSW@gmail.com
*/

package com.aestel.chemistry.openEye.fp;

import java.util.Iterator;

import openeye.oechem.OEMolBase;

/**
 * Interface for an engine which iterates over all Structure Code Names which are
 * generated using a particular algorithm for a molecule.
 *
 * A code name can be an ID from an ECFP algorithm, a linear path string as
 * generated by the {@link LinearCodeNameGenerator} or the name of a
 * structure code from a smarts list (eg. maccs1 for the first maccs key).
 *
 * @author albertgo
 *
 */
public interface StructureCodeNameIterator extends Iterator<String>
{  /**
    * terminate the execution on the last molecule and restart the iterator
    * working on the new input mol.
    */
   public void init(OEMolBase mol);

   /**
    * Close any internal resources.
    */
   public void close();

   /**
    * @return a string uniquely identifying this StructureCodeNameIterator.
    */
   public String getType();
}
